def func2(arg13, arg14):
    var66 = func3(arg13, arg14)
    var67 = -840 ^ (arg14 | arg13) - arg13
    var68 = arg13 & -72627908
    var69 = (var68 + arg14 - 25950062) - arg14
    var70 = (arg14 + var68) | arg13 | var68
    var71 = var67 | (arg14 | var69 + var66)
    var72 = var68 ^ (var70 | var70 | 488160844)
    var73 = (var67 - var68 & var70) - arg13
    var74 = var66 | var73 & (541 - var68)
    if var69 < var68:
        var75 = -684 & -357 - (449 + var68)
    else:
        var75 = var73 - 1244645446
    if var66 < var72:
        var76 = (var73 | 364 ^ var67) ^ var68
    else:
        var76 = (var72 + var74) & var70 ^ var72
    var77 = var66 - arg13 + var73 + -17
    var78 = var73 ^ var67 & var67
    if arg13 < var66:
        var79 = var73 | var73
    else:
        var79 = var74 ^ var74 ^ var69 + var71
    var80 = var78 | var66 ^ var72
    var81 = var71 | -703717627 ^ (var77 & var66)
    var82 = ((-200 & 856) & var72) + var73
    var83 = var81 | var73
    var84 = (var73 ^ (var77 - var80)) & -216
    var85 = var81 | (var80 | var78) & var80
    var86 = var71 | var77
    var87 = var86 ^ var73 + var78 + -509
    var88 = var71 & (var74 + var81) | var71
    var89 = var88 & var84
    var90 = var88 | var78 | var77
    result = -998929041 ^ 1299427635 + ((var82 | (var78 + (var73 - ((var86 & var83) - var69)))) - var68 - var85 ^ var77) | var80
    return result
def func3(arg15, arg16):
    var41 = func9()
    var46 = func10(var41, arg15)
    var47 = arg16 + arg16
    var48 = (var41 ^ -1756170664 & arg15) + arg16
    var49 = var48 + (var41 & -426) | var41
    var50 = var49 + -1584072411
    var51 = (307 ^ var48 & arg16) & var41
    var52 = (var49 ^ -699589469 & -2021091587) - var51
    var53 = var48 - var48 ^ arg16 & var41
    var54 = (718 | 24) & var48 | 269
    var55 = var41 + 1427846343 & -879
    var56 = 351 ^ var47
    var57 = (var52 & var47 + 1235657121) | arg16
    var58 = var41 | var48
    var59 = (var52 + var46) | var41
    var60 = var58 - var56
    var61 = var56 ^ var52 & (var54 - var48)
    if var54 < var56:
        var62 = var55 | var60 - var48 ^ var55
    else:
        var62 = ((var49 - var49) + var51) + var50
    var63 = var53 & var49 + 500 ^ var59
    var64 = var60 & var51
    var65 = var54 ^ ((var47 | var46) | arg16)
    result = var60 + (-825 | (((var52 | ((var60 | var53 + var57) - var55)) + var65) ^ var60 & var60) - arg16 & var65)
    return result
def func10(arg42, arg43):
    var44 = 0
    for var45 in xrange(24):
        var44 += (var45 - arg43) + -9
    return var44
def func9():
    func4()
    result = len(func6(-4, 6))
    func5()
    return result
def func7(arg19, arg20):
    var25 = func8(arg19, arg20)
    var26 = arg19 + var25
    var27 = var25 + -80592033 & var25 + arg20
    if var26 < var25:
        var28 = -855 | arg19
    else:
        var28 = var26 - arg20
    var29 = -837 & arg19 + var26
    result = (var27 - var27) ^ 838 - var26 & var29
    return result
def func8(arg21, arg22):
    var23 = 0
    for var24 in range(50):
        var23 += arg22 + var23 - arg21
    return var23
def func6(arg17, arg18):
    var30 = func7(arg17, -403537960)
    yield var30
    var31 = (-509 & 388) + arg17 + 65
    yield var31
    var32 = var31 ^ -126
    yield var32
    var33 = arg18 | var32 - arg18 + var32
    yield var33
    var34 = (var31 ^ -54638714) & 951 ^ -1097185083
    yield var34
    var35 = var32 & var34
    yield var35
    var36 = (var32 | var32) + -783 - arg18
    yield var36
    var37 = var35 - var35 ^ var33
    yield var37
    var38 = arg17 + arg17 - (var31 | var37)
    yield var38
    var39 = (var36 | -1583123326) & var37 | var38
    yield var39
    var40 = var31 + (var33 + var38 - var39)
    yield var40
def func5():
    global len
    del len
def func4():
    global len
    len = lambda x : 4
def func1(arg1, arg2):
    var3 = -498031608 + 539389941
    var4 = var3 + 1563630707 - -121 + -786
    var5 = arg2 ^ ((arg1 & -684509255) | -1978784390)
    var6 = var5 ^ var4
    var7 = arg1 & var4
    var8 = arg1 | (655 ^ var7)
    var9 = 387 & var5
    var10 = (-363 ^ arg1 | -38) - arg2
    var11 = var3 | var5 | arg1 | var8
    var12 = -565 | var6
    result = var8 & ((var3 + (arg1 - var3) + var6 & var12 + arg1 + var8) ^ (var10 ^ var10 & var7)) ^ var11
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 13'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 91'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg13, arg14):
    var66 = func3(arg13, arg14)
    var67 = -840 ^ (arg14 | arg13) - arg13
    var68 = arg13 & -72627908
    var69 = (var68 + arg14 - 25950062) - arg14
    var70 = (arg14 + var68) | arg13 | var68
    var71 = var67 | (arg14 | var69 + var66)
    var72 = var68 ^ (var70 | var70 | 488160844)
    var73 = (var67 - var68 & var70) - arg13
    var74 = var66 | var73 & (541 - var68)
    if var69 < var68:
        var75 = -684 & -357 - (449 + var68)
    else:
        var75 = var73 - 1244645446
    if var66 < var72:
        var76 = (var73 | 364 ^ var67) ^ var68
    else:
        var76 = (var72 + var74) & var70 ^ var72
    var77 = var66 - arg13 + var73 + -17
    var78 = var73 ^ var67 & var67
    if arg13 < var66:
        var79 = var73 | var73
    else:
        var79 = var74 ^ var74 ^ var69 + var71
    var80 = var78 | var66 ^ var72
    var81 = var71 | -703717627 ^ (var77 & var66)
    var82 = ((-200 & 856) & var72) + var73
    var83 = var81 | var73
    var84 = (var73 ^ (var77 - var80)) & -216
    var85 = var81 | (var80 | var78) & var80
    var86 = var71 | var77
    var87 = var86 ^ var73 + var78 + -509
    var88 = var71 & (var74 + var81) | var71
    var89 = var88 & var84
    var90 = var88 | var78 | var77
    result = -998929041 ^ 1299427635 + ((var82 | (var78 + (var73 - ((var86 & var83) - var69)))) - var68 - var85 ^ var77) | var80
    return result
def func3(arg15, arg16):
    var41 = func9()
    var46 = func10(var41, arg15)
    var47 = arg16 + arg16
    var48 = (var41 ^ -1756170664 & arg15) + arg16
    var49 = var48 + (var41 & -426) | var41
    var50 = var49 + -1584072411
    var51 = (307 ^ var48 & arg16) & var41
    var52 = (var49 ^ -699589469 & -2021091587) - var51
    var53 = var48 - var48 ^ arg16 & var41
    var54 = (718 | 24) & var48 | 269
    var55 = var41 + 1427846343 & -879
    var56 = 351 ^ var47
    var57 = (var52 & var47 + 1235657121) | arg16
    var58 = var41 | var48
    var59 = (var52 + var46) | var41
    var60 = var58 - var56
    var61 = var56 ^ var52 & (var54 - var48)
    if var54 < var56:
        var62 = var55 | var60 - var48 ^ var55
    else:
        var62 = ((var49 - var49) + var51) + var50
    var63 = var53 & var49 + 500 ^ var59
    var64 = var60 & var51
    var65 = var54 ^ ((var47 | var46) | arg16)
    result = var60 + (-825 | (((var52 | ((var60 | var53 + var57) - var55)) + var65) ^ var60 & var60) - arg16 & var65)
    return result
def func10(arg42, arg43):
    var44 = 0
    for var45 in xrange(24):
        var44 += (var45 - arg43) + -9
    return var44
def func9():
    func4()
    result = len(func6(-4, 6))
    func5()
    return result
def func7(arg19, arg20):
    var25 = func8(arg19, arg20)
    var26 = arg19 + var25
    var27 = var25 + -80592033 & var25 + arg20
    if var26 < var25:
        var28 = -855 | arg19
    else:
        var28 = var26 - arg20
    var29 = -837 & arg19 + var26
    result = (var27 - var27) ^ 838 - var26 & var29
    return result
def func8(arg21, arg22):
    var23 = 0
    for var24 in range(50):
        var23 += arg22 + var23 - arg21
    return var23
def func6(arg17, arg18):
    var30 = func7(arg17, -403537960)
    yield var30
    var31 = (-509 & 388) + arg17 + 65
    yield var31
    var32 = var31 ^ -126
    yield var32
    var33 = arg18 | var32 - arg18 + var32
    yield var33
    var34 = (var31 ^ -54638714) & 951 ^ -1097185083
    yield var34
    var35 = var32 & var34
    yield var35
    var36 = (var32 | var32) + -783 - arg18
    yield var36
    var37 = var35 - var35 ^ var33
    yield var37
    var38 = arg17 + arg17 - (var31 | var37)
    yield var38
    var39 = (var36 | -1583123326) & var37 | var38
    yield var39
    var40 = var31 + (var33 + var38 - var39)
    yield var40
def func5():
    global len
    del len
def func4():
    global len
    len = lambda x : 4
def func1(arg1, arg2):
    var3 = -498031608 + 539389941
    var4 = var3 + 1563630707 - -121 + -786
    var5 = arg2 ^ ((arg1 & -684509255) | -1978784390)
    var6 = var5 ^ var4
    var7 = arg1 & var4
    var8 = arg1 | (655 ^ var7)
    var9 = 387 & var5
    var10 = (-363 ^ arg1 | -38) - arg2
    var11 = var3 | var5 | arg1 | var8
    var12 = -565 | var6
    result = var8 & ((var3 + (arg1 - var3) + var6 & var12 + arg1 + var8) ^ (var10 ^ var10 & var7)) ^ var11
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 13'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 91'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg13, arg14):
    var66 = func3(arg13, arg14)
    var67 = -840 ^ (arg14 | arg13) - arg13
    var68 = arg13 & -72627908
    var69 = (var68 + arg14 - 25950062) - arg14
    var70 = (arg14 + var68) | arg13 | var68
    var71 = var67 | (arg14 | var69 + var66)
    var72 = var68 ^ (var70 | var70 | 488160844)
    var73 = (var67 - var68 & var70) - arg13
    var74 = var66 | var73 & (541 - var68)
    if var69 < var68:
        var75 = -684 & -357 - (449 + var68)
    else:
        var75 = var73 - 1244645446
    if var66 < var72:
        var76 = (var73 | 364 ^ var67) ^ var68
    else:
        var76 = (var72 + var74) & var70 ^ var72
    var77 = var66 - arg13 + var73 + -17
    var78 = var73 ^ var67 & var67
    if arg13 < var66:
        var79 = var73 | var73
    else:
        var79 = var74 ^ var74 ^ var69 + var71
    var80 = var78 | var66 ^ var72
    var81 = var71 | -703717627 ^ (var77 & var66)
    var82 = ((-200 & 856) & var72) + var73
    var83 = var81 | var73
    var84 = (var73 ^ (var77 - var80)) & -216
    var85 = var81 | (var80 | var78) & var80
    var86 = var71 | var77
    var87 = var86 ^ var73 + var78 + -509
    var88 = var71 & (var74 + var81) | var71
    var89 = var88 & var84
    var90 = var88 | var78 | var77
    result = -998929041 ^ 1299427635 + ((var82 | (var78 + (var73 - ((var86 & var83) - var69)))) - var68 - var85 ^ var77) | var80
    return result
def func3(arg15, arg16):
    var41 = func9()
    var46 = func10(var41, arg15)
    var47 = arg16 + arg16
    var48 = (var41 ^ -1756170664 & arg15) + arg16
    var49 = var48 + (var41 & -426) | var41
    var50 = var49 + -1584072411
    var51 = (307 ^ var48 & arg16) & var41
    var52 = (var49 ^ -699589469 & -2021091587) - var51
    var53 = var48 - var48 ^ arg16 & var41
    var54 = (718 | 24) & var48 | 269
    var55 = var41 + 1427846343 & -879
    var56 = 351 ^ var47
    var57 = (var52 & var47 + 1235657121) | arg16
    var58 = var41 | var48
    var59 = (var52 + var46) | var41
    var60 = var58 - var56
    var61 = var56 ^ var52 & (var54 - var48)
    if var54 < var56:
        var62 = var55 | var60 - var48 ^ var55
    else:
        var62 = ((var49 - var49) + var51) + var50
    var63 = var53 & var49 + 500 ^ var59
    var64 = var60 & var51
    var65 = var54 ^ ((var47 | var46) | arg16)
    result = var60 + (-825 | (((var52 | ((var60 | var53 + var57) - var55)) + var65) ^ var60 & var60) - arg16 & var65)
    return result
def func10(arg42, arg43):
    var44 = 0
    for var45 in xrange(24):
        var44 += (var45 - arg43) + -9
    return var44
def func9():
    func4()
    result = len(func6(-4, 6))
    func5()
    return result
def func7(arg19, arg20):
    var25 = func8(arg19, arg20)
    var26 = arg19 + var25
    var27 = var25 + -80592033 & var25 + arg20
    if var26 < var25:
        var28 = -855 | arg19
    else:
        var28 = var26 - arg20
    var29 = -837 & arg19 + var26
    result = (var27 - var27) ^ 838 - var26 & var29
    return result
def func8(arg21, arg22):
    var23 = 0
    for var24 in range(50):
        var23 += arg22 + var23 - arg21
    return var23
def func6(arg17, arg18):
    var30 = func7(arg17, -403537960)
    yield var30
    var31 = (-509 & 388) + arg17 + 65
    yield var31
    var32 = var31 ^ -126
    yield var32
    var33 = arg18 | var32 - arg18 + var32
    yield var33
    var34 = (var31 ^ -54638714) & 951 ^ -1097185083
    yield var34
    var35 = var32 & var34
    yield var35
    var36 = (var32 | var32) + -783 - arg18
    yield var36
    var37 = var35 - var35 ^ var33
    yield var37
    var38 = arg17 + arg17 - (var31 | var37)
    yield var38
    var39 = (var36 | -1583123326) & var37 | var38
    yield var39
    var40 = var31 + (var33 + var38 - var39)
    yield var40
def func5():
    global len
    del len
def func4():
    global len
    len = lambda x : 4
def func1(arg1, arg2):
    var3 = -498031608 + 539389941
    var4 = var3 + 1563630707 - -121 + -786
    var5 = arg2 ^ ((arg1 & -684509255) | -1978784390)
    var6 = var5 ^ var4
    var7 = arg1 & var4
    var8 = arg1 | (655 ^ var7)
    var9 = 387 & var5
    var10 = (-363 ^ arg1 | -38) - arg2
    var11 = var3 | var5 | arg1 | var8
    var12 = -565 | var6
    result = var8 & ((var3 + (arg1 - var3) + var6 & var12 + arg1 + var8) ^ (var10 ^ var10 & var7)) ^ var11
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 13'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 91'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg13, arg14):
    var66 = func3(arg13, arg14)
    var67 = -840 ^ (arg14 | arg13) - arg13
    var68 = arg13 & -72627908
    var69 = (var68 + arg14 - 25950062) - arg14
    var70 = (arg14 + var68) | arg13 | var68
    var71 = var67 | (arg14 | var69 + var66)
    var72 = var68 ^ (var70 | var70 | 488160844)
    var73 = (var67 - var68 & var70) - arg13
    var74 = var66 | var73 & (541 - var68)
    if var69 < var68:
        var75 = -684 & -357 - (449 + var68)
    else:
        var75 = var73 - 1244645446
    if var66 < var72:
        var76 = (var73 | 364 ^ var67) ^ var68
    else:
        var76 = (var72 + var74) & var70 ^ var72
    var77 = var66 - arg13 + var73 + -17
    var78 = var73 ^ var67 & var67
    if arg13 < var66:
        var79 = var73 | var73
    else:
        var79 = var74 ^ var74 ^ var69 + var71
    var80 = var78 | var66 ^ var72
    var81 = var71 | -703717627 ^ (var77 & var66)
    var82 = ((-200 & 856) & var72) + var73
    var83 = var81 | var73
    var84 = (var73 ^ (var77 - var80)) & -216
    var85 = var81 | (var80 | var78) & var80
    var86 = var71 | var77
    var87 = var86 ^ var73 + var78 + -509
    var88 = var71 & (var74 + var81) | var71
    var89 = var88 & var84
    var90 = var88 | var78 | var77
    result = -998929041 ^ 1299427635 + ((var82 | (var78 + (var73 - ((var86 & var83) - var69)))) - var68 - var85 ^ var77) | var80
    return result
def func3(arg15, arg16):
    var41 = func9()
    var46 = func10(var41, arg15)
    var47 = arg16 + arg16
    var48 = (var41 ^ -1756170664 & arg15) + arg16
    var49 = var48 + (var41 & -426) | var41
    var50 = var49 + -1584072411
    var51 = (307 ^ var48 & arg16) & var41
    var52 = (var49 ^ -699589469 & -2021091587) - var51
    var53 = var48 - var48 ^ arg16 & var41
    var54 = (718 | 24) & var48 | 269
    var55 = var41 + 1427846343 & -879
    var56 = 351 ^ var47
    var57 = (var52 & var47 + 1235657121) | arg16
    var58 = var41 | var48
    var59 = (var52 + var46) | var41
    var60 = var58 - var56
    var61 = var56 ^ var52 & (var54 - var48)
    if var54 < var56:
        var62 = var55 | var60 - var48 ^ var55
    else:
        var62 = ((var49 - var49) + var51) + var50
    var63 = var53 & var49 + 500 ^ var59
    var64 = var60 & var51
    var65 = var54 ^ ((var47 | var46) | arg16)
    result = var60 + (-825 | (((var52 | ((var60 | var53 + var57) - var55)) + var65) ^ var60 & var60) - arg16 & var65)
    return result
def func10(arg42, arg43):
    var44 = 0
    for var45 in xrange(24):
        var44 += (var45 - arg43) + -9
    return var44
def func9():
    func4()
    result = len(func6(-4, 6))
    func5()
    return result
def func7(arg19, arg20):
    var25 = func8(arg19, arg20)
    var26 = arg19 + var25
    var27 = var25 + -80592033 & var25 + arg20
    if var26 < var25:
        var28 = -855 | arg19
    else:
        var28 = var26 - arg20
    var29 = -837 & arg19 + var26
    result = (var27 - var27) ^ 838 - var26 & var29
    return result
def func8(arg21, arg22):
    var23 = 0
    for var24 in range(50):
        var23 += arg22 + var23 - arg21
    return var23
def func6(arg17, arg18):
    var30 = func7(arg17, -403537960)
    yield var30
    var31 = (-509 & 388) + arg17 + 65
    yield var31
    var32 = var31 ^ -126
    yield var32
    var33 = arg18 | var32 - arg18 + var32
    yield var33
    var34 = (var31 ^ -54638714) & 951 ^ -1097185083
    yield var34
    var35 = var32 & var34
    yield var35
    var36 = (var32 | var32) + -783 - arg18
    yield var36
    var37 = var35 - var35 ^ var33
    yield var37
    var38 = arg17 + arg17 - (var31 | var37)
    yield var38
    var39 = (var36 | -1583123326) & var37 | var38
    yield var39
    var40 = var31 + (var33 + var38 - var39)
    yield var40
def func5():
    global len
    del len
def func4():
    global len
    len = lambda x : 4
def func1(arg1, arg2):
    var3 = -498031608 + 539389941
    var4 = var3 + 1563630707 - -121 + -786
    var5 = arg2 ^ ((arg1 & -684509255) | -1978784390)
    var6 = var5 ^ var4
    var7 = arg1 & var4
    var8 = arg1 | (655 ^ var7)
    var9 = 387 & var5
    var10 = (-363 ^ arg1 | -38) - arg2
    var11 = var3 | var5 | arg1 | var8
    var12 = -565 | var6
    result = var8 & ((var3 + (arg1 - var3) + var6 & var12 + arg1 + var8) ^ (var10 ^ var10 & var7)) ^ var11
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 13'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 91'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg13, arg14):
    var66 = func3(arg13, arg14)
    var67 = -840 ^ (arg14 | arg13) - arg13
    var68 = arg13 & -72627908
    var69 = (var68 + arg14 - 25950062) - arg14
    var70 = (arg14 + var68) | arg13 | var68
    var71 = var67 | (arg14 | var69 + var66)
    var72 = var68 ^ (var70 | var70 | 488160844)
    var73 = (var67 - var68 & var70) - arg13
    var74 = var66 | var73 & (541 - var68)
    if var69 < var68:
        var75 = -684 & -357 - (449 + var68)
    else:
        var75 = var73 - 1244645446
    if var66 < var72:
        var76 = (var73 | 364 ^ var67) ^ var68
    else:
        var76 = (var72 + var74) & var70 ^ var72
    var77 = var66 - arg13 + var73 + -17
    var78 = var73 ^ var67 & var67
    if arg13 < var66:
        var79 = var73 | var73
    else:
        var79 = var74 ^ var74 ^ var69 + var71
    var80 = var78 | var66 ^ var72
    var81 = var71 | -703717627 ^ (var77 & var66)
    var82 = ((-200 & 856) & var72) + var73
    var83 = var81 | var73
    var84 = (var73 ^ (var77 - var80)) & -216
    var85 = var81 | (var80 | var78) & var80
    var86 = var71 | var77
    var87 = var86 ^ var73 + var78 + -509
    var88 = var71 & (var74 + var81) | var71
    var89 = var88 & var84
    var90 = var88 | var78 | var77
    result = -998929041 ^ 1299427635 + ((var82 | (var78 + (var73 - ((var86 & var83) - var69)))) - var68 - var85 ^ var77) | var80
    return result
def func3(arg15, arg16):
    var41 = func9()
    var46 = func10(var41, arg15)
    var47 = arg16 + arg16
    var48 = (var41 ^ -1756170664 & arg15) + arg16
    var49 = var48 + (var41 & -426) | var41
    var50 = var49 + -1584072411
    var51 = (307 ^ var48 & arg16) & var41
    var52 = (var49 ^ -699589469 & -2021091587) - var51
    var53 = var48 - var48 ^ arg16 & var41
    var54 = (718 | 24) & var48 | 269
    var55 = var41 + 1427846343 & -879
    var56 = 351 ^ var47
    var57 = (var52 & var47 + 1235657121) | arg16
    var58 = var41 | var48
    var59 = (var52 + var46) | var41
    var60 = var58 - var56
    var61 = var56 ^ var52 & (var54 - var48)
    if var54 < var56:
        var62 = var55 | var60 - var48 ^ var55
    else:
        var62 = ((var49 - var49) + var51) + var50
    var63 = var53 & var49 + 500 ^ var59
    var64 = var60 & var51
    var65 = var54 ^ ((var47 | var46) | arg16)
    result = var60 + (-825 | (((var52 | ((var60 | var53 + var57) - var55)) + var65) ^ var60 & var60) - arg16 & var65)
    return result
def func10(arg42, arg43):
    var44 = 0
    for var45 in xrange(24):
        var44 += (var45 - arg43) + -9
    return var44
def func9():
    func4()
    result = len(func6(-4, 6))
    func5()
    return result
def func7(arg19, arg20):
    var25 = func8(arg19, arg20)
    var26 = arg19 + var25
    var27 = var25 + -80592033 & var25 + arg20
    if var26 < var25:
        var28 = -855 | arg19
    else:
        var28 = var26 - arg20
    var29 = -837 & arg19 + var26
    result = (var27 - var27) ^ 838 - var26 & var29
    return result
def func8(arg21, arg22):
    var23 = 0
    for var24 in range(50):
        var23 += arg22 + var23 - arg21
    return var23
def func6(arg17, arg18):
    var30 = func7(arg17, -403537960)
    yield var30
    var31 = (-509 & 388) + arg17 + 65
    yield var31
    var32 = var31 ^ -126
    yield var32
    var33 = arg18 | var32 - arg18 + var32
    yield var33
    var34 = (var31 ^ -54638714) & 951 ^ -1097185083
    yield var34
    var35 = var32 & var34
    yield var35
    var36 = (var32 | var32) + -783 - arg18
    yield var36
    var37 = var35 - var35 ^ var33
    yield var37
    var38 = arg17 + arg17 - (var31 | var37)
    yield var38
    var39 = (var36 | -1583123326) & var37 | var38
    yield var39
    var40 = var31 + (var33 + var38 - var39)
    yield var40
def func5():
    global len
    del len
def func4():
    global len
    len = lambda x : 4
def func1(arg1, arg2):
    var3 = -498031608 + 539389941
    var4 = var3 + 1563630707 - -121 + -786
    var5 = arg2 ^ ((arg1 & -684509255) | -1978784390)
    var6 = var5 ^ var4
    var7 = arg1 & var4
    var8 = arg1 | (655 ^ var7)
    var9 = 387 & var5
    var10 = (-363 ^ arg1 | -38) - arg2
    var11 = var3 | var5 | arg1 | var8
    var12 = -565 | var6
    result = var8 & ((var3 + (arg1 - var3) + var6 & var12 + arg1 + var8) ^ (var10 ^ var10 & var7)) ^ var11
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 13'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 91'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg13, arg14):
    var66 = func3(arg13, arg14)
    var67 = -840 ^ (arg14 | arg13) - arg13
    var68 = arg13 & -72627908
    var69 = (var68 + arg14 - 25950062) - arg14
    var70 = (arg14 + var68) | arg13 | var68
    var71 = var67 | (arg14 | var69 + var66)
    var72 = var68 ^ (var70 | var70 | 488160844)
    var73 = (var67 - var68 & var70) - arg13
    var74 = var66 | var73 & (541 - var68)
    if var69 < var68:
        var75 = -684 & -357 - (449 + var68)
    else:
        var75 = var73 - 1244645446
    if var66 < var72:
        var76 = (var73 | 364 ^ var67) ^ var68
    else:
        var76 = (var72 + var74) & var70 ^ var72
    var77 = var66 - arg13 + var73 + -17
    var78 = var73 ^ var67 & var67
    if arg13 < var66:
        var79 = var73 | var73
    else:
        var79 = var74 ^ var74 ^ var69 + var71
    var80 = var78 | var66 ^ var72
    var81 = var71 | -703717627 ^ (var77 & var66)
    var82 = ((-200 & 856) & var72) + var73
    var83 = var81 | var73
    var84 = (var73 ^ (var77 - var80)) & -216
    var85 = var81 | (var80 | var78) & var80
    var86 = var71 | var77
    var87 = var86 ^ var73 + var78 + -509
    var88 = var71 & (var74 + var81) | var71
    var89 = var88 & var84
    var90 = var88 | var78 | var77
    result = -998929041 ^ 1299427635 + ((var82 | (var78 + (var73 - ((var86 & var83) - var69)))) - var68 - var85 ^ var77) | var80
    return result
def func3(arg15, arg16):
    var41 = func9()
    var46 = func10(var41, arg15)
    var47 = arg16 + arg16
    var48 = (var41 ^ -1756170664 & arg15) + arg16
    var49 = var48 + (var41 & -426) | var41
    var50 = var49 + -1584072411
    var51 = (307 ^ var48 & arg16) & var41
    var52 = (var49 ^ -699589469 & -2021091587) - var51
    var53 = var48 - var48 ^ arg16 & var41
    var54 = (718 | 24) & var48 | 269
    var55 = var41 + 1427846343 & -879
    var56 = 351 ^ var47
    var57 = (var52 & var47 + 1235657121) | arg16
    var58 = var41 | var48
    var59 = (var52 + var46) | var41
    var60 = var58 - var56
    var61 = var56 ^ var52 & (var54 - var48)
    if var54 < var56:
        var62 = var55 | var60 - var48 ^ var55
    else:
        var62 = ((var49 - var49) + var51) + var50
    var63 = var53 & var49 + 500 ^ var59
    var64 = var60 & var51
    var65 = var54 ^ ((var47 | var46) | arg16)
    result = var60 + (-825 | (((var52 | ((var60 | var53 + var57) - var55)) + var65) ^ var60 & var60) - arg16 & var65)
    return result
def func10(arg42, arg43):
    var44 = 0
    for var45 in xrange(24):
        var44 += (var45 - arg43) + -9
    return var44
def func9():
    func4()
    result = len(func6(-4, 6))
    func5()
    return result
def func7(arg19, arg20):
    var25 = func8(arg19, arg20)
    var26 = arg19 + var25
    var27 = var25 + -80592033 & var25 + arg20
    if var26 < var25:
        var28 = -855 | arg19
    else:
        var28 = var26 - arg20
    var29 = -837 & arg19 + var26
    result = (var27 - var27) ^ 838 - var26 & var29
    return result
def func8(arg21, arg22):
    var23 = 0
    for var24 in range(50):
        var23 += arg22 + var23 - arg21
    return var23
def func6(arg17, arg18):
    var30 = func7(arg17, -403537960)
    yield var30
    var31 = (-509 & 388) + arg17 + 65
    yield var31
    var32 = var31 ^ -126
    yield var32
    var33 = arg18 | var32 - arg18 + var32
    yield var33
    var34 = (var31 ^ -54638714) & 951 ^ -1097185083
    yield var34
    var35 = var32 & var34
    yield var35
    var36 = (var32 | var32) + -783 - arg18
    yield var36
    var37 = var35 - var35 ^ var33
    yield var37
    var38 = arg17 + arg17 - (var31 | var37)
    yield var38
    var39 = (var36 | -1583123326) & var37 | var38
    yield var39
    var40 = var31 + (var33 + var38 - var39)
    yield var40
def func5():
    global len
    del len
def func4():
    global len
    len = lambda x : 4
def func1(arg1, arg2):
    var3 = -498031608 + 539389941
    var4 = var3 + 1563630707 - -121 + -786
    var5 = arg2 ^ ((arg1 & -684509255) | -1978784390)
    var6 = var5 ^ var4
    var7 = arg1 & var4
    var8 = arg1 | (655 ^ var7)
    var9 = 387 & var5
    var10 = (-363 ^ arg1 | -38) - arg2
    var11 = var3 | var5 | arg1 | var8
    var12 = -565 | var6
    result = var8 & ((var3 + (arg1 - var3) + var6 & var12 + arg1 + var8) ^ (var10 ^ var10 & var7)) ^ var11
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 13'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 91'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg13, arg14):
    var66 = func3(arg13, arg14)
    var67 = -840 ^ (arg14 | arg13) - arg13
    var68 = arg13 & -72627908
    var69 = (var68 + arg14 - 25950062) - arg14
    var70 = (arg14 + var68) | arg13 | var68
    var71 = var67 | (arg14 | var69 + var66)
    var72 = var68 ^ (var70 | var70 | 488160844)
    var73 = (var67 - var68 & var70) - arg13
    var74 = var66 | var73 & (541 - var68)
    if var69 < var68:
        var75 = -684 & -357 - (449 + var68)
    else:
        var75 = var73 - 1244645446
    if var66 < var72:
        var76 = (var73 | 364 ^ var67) ^ var68
    else:
        var76 = (var72 + var74) & var70 ^ var72
    var77 = var66 - arg13 + var73 + -17
    var78 = var73 ^ var67 & var67
    if arg13 < var66:
        var79 = var73 | var73
    else:
        var79 = var74 ^ var74 ^ var69 + var71
    var80 = var78 | var66 ^ var72
    var81 = var71 | -703717627 ^ (var77 & var66)
    var82 = ((-200 & 856) & var72) + var73
    var83 = var81 | var73
    var84 = (var73 ^ (var77 - var80)) & -216
    var85 = var81 | (var80 | var78) & var80
    var86 = var71 | var77
    var87 = var86 ^ var73 + var78 + -509
    var88 = var71 & (var74 + var81) | var71
    var89 = var88 & var84
    var90 = var88 | var78 | var77
    result = -998929041 ^ 1299427635 + ((var82 | (var78 + (var73 - ((var86 & var83) - var69)))) - var68 - var85 ^ var77) | var80
    return result
def func3(arg15, arg16):
    var41 = func9()
    var46 = func10(var41, arg15)
    var47 = arg16 + arg16
    var48 = (var41 ^ -1756170664 & arg15) + arg16
    var49 = var48 + (var41 & -426) | var41
    var50 = var49 + -1584072411
    var51 = (307 ^ var48 & arg16) & var41
    var52 = (var49 ^ -699589469 & -2021091587) - var51
    var53 = var48 - var48 ^ arg16 & var41
    var54 = (718 | 24) & var48 | 269
    var55 = var41 + 1427846343 & -879
    var56 = 351 ^ var47
    var57 = (var52 & var47 + 1235657121) | arg16
    var58 = var41 | var48
    var59 = (var52 + var46) | var41
    var60 = var58 - var56
    var61 = var56 ^ var52 & (var54 - var48)
    if var54 < var56:
        var62 = var55 | var60 - var48 ^ var55
    else:
        var62 = ((var49 - var49) + var51) + var50
    var63 = var53 & var49 + 500 ^ var59
    var64 = var60 & var51
    var65 = var54 ^ ((var47 | var46) | arg16)
    result = var60 + (-825 | (((var52 | ((var60 | var53 + var57) - var55)) + var65) ^ var60 & var60) - arg16 & var65)
    return result
def func10(arg42, arg43):
    var44 = 0
    for var45 in xrange(24):
        var44 += (var45 - arg43) + -9
    return var44
def func9():
    func4()
    result = len(func6(-4, 6))
    func5()
    return result
def func7(arg19, arg20):
    var25 = func8(arg19, arg20)
    var26 = arg19 + var25
    var27 = var25 + -80592033 & var25 + arg20
    if var26 < var25:
        var28 = -855 | arg19
    else:
        var28 = var26 - arg20
    var29 = -837 & arg19 + var26
    result = (var27 - var27) ^ 838 - var26 & var29
    return result
def func8(arg21, arg22):
    var23 = 0
    for var24 in range(50):
        var23 += arg22 + var23 - arg21
    return var23
def func6(arg17, arg18):
    var30 = func7(arg17, -403537960)
    yield var30
    var31 = (-509 & 388) + arg17 + 65
    yield var31
    var32 = var31 ^ -126
    yield var32
    var33 = arg18 | var32 - arg18 + var32
    yield var33
    var34 = (var31 ^ -54638714) & 951 ^ -1097185083
    yield var34
    var35 = var32 & var34
    yield var35
    var36 = (var32 | var32) + -783 - arg18
    yield var36
    var37 = var35 - var35 ^ var33
    yield var37
    var38 = arg17 + arg17 - (var31 | var37)
    yield var38
    var39 = (var36 | -1583123326) & var37 | var38
    yield var39
    var40 = var31 + (var33 + var38 - var39)
    yield var40
def func5():
    global len
    del len
def func4():
    global len
    len = lambda x : 4
def func1(arg1, arg2):
    var3 = -498031608 + 539389941
    var4 = var3 + 1563630707 - -121 + -786
    var5 = arg2 ^ ((arg1 & -684509255) | -1978784390)
    var6 = var5 ^ var4
    var7 = arg1 & var4
    var8 = arg1 | (655 ^ var7)
    var9 = 387 & var5
    var10 = (-363 ^ arg1 | -38) - arg2
    var11 = var3 | var5 | arg1 | var8
    var12 = -565 | var6
    result = var8 & ((var3 + (arg1 - var3) + var6 & var12 + arg1 + var8) ^ (var10 ^ var10 & var7)) ^ var11
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 13'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 91'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg13, arg14):
    var66 = func3(arg13, arg14)
    var67 = -840 ^ (arg14 | arg13) - arg13
    var68 = arg13 & -72627908
    var69 = (var68 + arg14 - 25950062) - arg14
    var70 = (arg14 + var68) | arg13 | var68
    var71 = var67 | (arg14 | var69 + var66)
    var72 = var68 ^ (var70 | var70 | 488160844)
    var73 = (var67 - var68 & var70) - arg13
    var74 = var66 | var73 & (541 - var68)
    if var69 < var68:
        var75 = -684 & -357 - (449 + var68)
    else:
        var75 = var73 - 1244645446
    if var66 < var72:
        var76 = (var73 | 364 ^ var67) ^ var68
    else:
        var76 = (var72 + var74) & var70 ^ var72
    var77 = var66 - arg13 + var73 + -17
    var78 = var73 ^ var67 & var67
    if arg13 < var66:
        var79 = var73 | var73
    else:
        var79 = var74 ^ var74 ^ var69 + var71
    var80 = var78 | var66 ^ var72
    var81 = var71 | -703717627 ^ (var77 & var66)
    var82 = ((-200 & 856) & var72) + var73
    var83 = var81 | var73
    var84 = (var73 ^ (var77 - var80)) & -216
    var85 = var81 | (var80 | var78) & var80
    var86 = var71 | var77
    var87 = var86 ^ var73 + var78 + -509
    var88 = var71 & (var74 + var81) | var71
    var89 = var88 & var84
    var90 = var88 | var78 | var77
    result = -998929041 ^ 1299427635 + ((var82 | (var78 + (var73 - ((var86 & var83) - var69)))) - var68 - var85 ^ var77) | var80
    return result
def func3(arg15, arg16):
    var41 = func9()
    var46 = func10(var41, arg15)
    var47 = arg16 + arg16
    var48 = (var41 ^ -1756170664 & arg15) + arg16
    var49 = var48 + (var41 & -426) | var41
    var50 = var49 + -1584072411
    var51 = (307 ^ var48 & arg16) & var41
    var52 = (var49 ^ -699589469 & -2021091587) - var51
    var53 = var48 - var48 ^ arg16 & var41
    var54 = (718 | 24) & var48 | 269
    var55 = var41 + 1427846343 & -879
    var56 = 351 ^ var47
    var57 = (var52 & var47 + 1235657121) | arg16
    var58 = var41 | var48
    var59 = (var52 + var46) | var41
    var60 = var58 - var56
    var61 = var56 ^ var52 & (var54 - var48)
    if var54 < var56:
        var62 = var55 | var60 - var48 ^ var55
    else:
        var62 = ((var49 - var49) + var51) + var50
    var63 = var53 & var49 + 500 ^ var59
    var64 = var60 & var51
    var65 = var54 ^ ((var47 | var46) | arg16)
    result = var60 + (-825 | (((var52 | ((var60 | var53 + var57) - var55)) + var65) ^ var60 & var60) - arg16 & var65)
    return result
def func10(arg42, arg43):
    var44 = 0
    for var45 in xrange(24):
        var44 += (var45 - arg43) + -9
    return var44
def func9():
    func4()
    result = len(func6(-4, 6))
    func5()
    return result
def func7(arg19, arg20):
    var25 = func8(arg19, arg20)
    var26 = arg19 + var25
    var27 = var25 + -80592033 & var25 + arg20
    if var26 < var25:
        var28 = -855 | arg19
    else:
        var28 = var26 - arg20
    var29 = -837 & arg19 + var26
    result = (var27 - var27) ^ 838 - var26 & var29
    return result
def func8(arg21, arg22):
    var23 = 0
    for var24 in range(50):
        var23 += arg22 + var23 - arg21
    return var23
def func6(arg17, arg18):
    var30 = func7(arg17, -403537960)
    yield var30
    var31 = (-509 & 388) + arg17 + 65
    yield var31
    var32 = var31 ^ -126
    yield var32
    var33 = arg18 | var32 - arg18 + var32
    yield var33
    var34 = (var31 ^ -54638714) & 951 ^ -1097185083
    yield var34
    var35 = var32 & var34
    yield var35
    var36 = (var32 | var32) + -783 - arg18
    yield var36
    var37 = var35 - var35 ^ var33
    yield var37
    var38 = arg17 + arg17 - (var31 | var37)
    yield var38
    var39 = (var36 | -1583123326) & var37 | var38
    yield var39
    var40 = var31 + (var33 + var38 - var39)
    yield var40
def func5():
    global len
    del len
def func4():
    global len
    len = lambda x : 4
def func1(arg1, arg2):
    var3 = -498031608 + 539389941
    var4 = var3 + 1563630707 - -121 + -786
    var5 = arg2 ^ ((arg1 & -684509255) | -1978784390)
    var6 = var5 ^ var4
    var7 = arg1 & var4
    var8 = arg1 | (655 ^ var7)
    var9 = 387 & var5
    var10 = (-363 ^ arg1 | -38) - arg2
    var11 = var3 | var5 | arg1 | var8
    var12 = -565 | var6
    result = var8 & ((var3 + (arg1 - var3) + var6 & var12 + arg1 + var8) ^ (var10 ^ var10 & var7)) ^ var11
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 13'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 91'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
